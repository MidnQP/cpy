---- libavoidrepitition.h ----
This library aims to implement in C the builtin and/or most useful functions of the interpreted Python3 programming language, as Python3 is almost 30x slower compared to C. Mainly because Python3 source needs to run on a VM, rather than being compiled into CPU native binary.




---- GETTING INVOLVED ----
To contribute code to the upsteam:
  1. Fork this project.
  2. Make your changes.
  3. Do a pull request to this project.
  4. Code review + Merge!!




---- ROADMAP ----
[n] Implemented
[-] Yet to implement
::  Return value
!   Polymorphism required

- - - - - - - - - - - - - - - -
char implemented[20][128]=
{
"[1] assert(expression)        :: True | False",
"[5] substr(str, substr)       :: substr (up to matched)",
"[6] sum(array, len(array))    :: Sum of the array of numbers",
"[8] max(array, len(array))    :: Item with the maximum value",
"[9] min(array, len(array))    :: Item with the minimum value",
};
- - - - - - - - - - - - - - - -


[-] open(char* filename, char* mode) :: File's content
[-] typeof(variable name)     :: Integer corresponding to a type [!]
[-] len(array)                :: Length of the array [!]
[-] str(int)                  :: Converts int to str [!]
[-] sort(array, len(array))   :: An array with the items sorted.
[-] in(array, element)        :: 0 | 1 [!]
[-] print(any, anything, ...) :: Writes to stdout [!]
[-] str_split(str, splitStr)  :: An array of strings, separated 
                                 by splitString.
[-] sys_output("command")     :: Unlike os.system(), this function 
                                 shall actually return the output 
                                 to a var.




---- SPECIAL GRATITUDE ----
- @ahmfuad []


- @your-name-here [@your-organization-here]
